{"ast":null,"code":"const dbName = 'SiteStoryDB';\nconst storeName = 'audioFiles';\nconst openDB = () => {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(dbName, 1);\n    request.onerror = () => reject(request.error);\n    request.onsuccess = () => resolve(request.result);\n    request.onupgradeneeded = event => {\n      const db = event.target.result;\n      db.createObjectStore(storeName, {\n        keyPath: 'id'\n      });\n    };\n  });\n};\nconst saveAudioToIndexedDB = async (audioFile, title) => {\n  const db = await openDB();\n  const transaction = db.transaction(storeName, 'readwrite');\n  const store = transaction.objectStore(storeName);\n  const id = title + Date.now();\n  await store.put({\n    id,\n    title,\n    audioFile\n  });\n  return id;\n};\nconst getAudioFromIndexedDB = async id => {\n  const db = await openDB();\n  return new Promise((resolve, reject) => {\n    const transaction = db.transaction(storeName, 'readonly');\n    const store = transaction.objectStore(storeName);\n    const request = store.get(id);\n    request.onsuccess = event => {\n      resolve(event.target);\n    };\n    request.onerror = event => {\n      reject(event.target.error);\n    };\n  });\n};\nexport { openDB, saveAudioToIndexedDB, getAudioFromIndexedDB };","map":{"version":3,"names":["dbName","storeName","openDB","Promise","resolve","reject","request","indexedDB","open","onerror","error","onsuccess","result","onupgradeneeded","event","db","target","createObjectStore","keyPath","saveAudioToIndexedDB","audioFile","title","transaction","store","objectStore","id","Date","now","put","getAudioFromIndexedDB","get"],"sources":["/Users/wmobley/Documents/GitHub/SiteStoriesForm/src/db.js"],"sourcesContent":["const dbName = 'SiteStoryDB';\nconst storeName = 'audioFiles';\n\nconst openDB = () => {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(dbName, 1);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result);\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        db.createObjectStore(storeName, { keyPath: 'id' });\n      };\n    });\n  };\n  \n  const saveAudioToIndexedDB = async (audioFile, title) => {\n    const db = await openDB();\n    const transaction = db.transaction(storeName, 'readwrite');\n    const store = transaction.objectStore(storeName);\n    const id = title+Date.now();\n    await store.put({ id, title, audioFile });\n    return id;\n  };\n  const getAudioFromIndexedDB = async (id) => {\n    const db = await openDB();\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction(storeName, 'readonly');\n      const store = transaction.objectStore(storeName);\n      const request = store.get(id);\n  \n      request.onsuccess = (event) => {\n        resolve(event.target);\n      };\n  \n      request.onerror = (event) => {\n        reject(event.target.error);\n      };\n    });\n  };\n  export { openDB, saveAudioToIndexedDB, getAudioFromIndexedDB };"],"mappings":"AAAA,MAAMA,MAAM,GAAG,aAAa;AAC5B,MAAMC,SAAS,GAAG,YAAY;AAE9B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,OAAO,GAAGC,SAAS,CAACC,IAAI,CAACR,MAAM,EAAE,CAAC,CAAC;IACzCM,OAAO,CAACG,OAAO,GAAG,MAAMJ,MAAM,CAACC,OAAO,CAACI,KAAK,CAAC;IAC7CJ,OAAO,CAACK,SAAS,GAAG,MAAMP,OAAO,CAACE,OAAO,CAACM,MAAM,CAAC;IACjDN,OAAO,CAACO,eAAe,GAAIC,KAAK,IAAK;MACnC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACJ,MAAM;MAC9BG,EAAE,CAACE,iBAAiB,CAAChB,SAAS,EAAE;QAAEiB,OAAO,EAAE;MAAK,CAAC,CAAC;IACpD,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,KAAK,KAAK;EACvD,MAAMN,EAAE,GAAG,MAAMb,MAAM,CAAC,CAAC;EACzB,MAAMoB,WAAW,GAAGP,EAAE,CAACO,WAAW,CAACrB,SAAS,EAAE,WAAW,CAAC;EAC1D,MAAMsB,KAAK,GAAGD,WAAW,CAACE,WAAW,CAACvB,SAAS,CAAC;EAChD,MAAMwB,EAAE,GAAGJ,KAAK,GAACK,IAAI,CAACC,GAAG,CAAC,CAAC;EAC3B,MAAMJ,KAAK,CAACK,GAAG,CAAC;IAAEH,EAAE;IAAEJ,KAAK;IAAED;EAAU,CAAC,CAAC;EACzC,OAAOK,EAAE;AACX,CAAC;AACD,MAAMI,qBAAqB,GAAG,MAAOJ,EAAE,IAAK;EAC1C,MAAMV,EAAE,GAAG,MAAMb,MAAM,CAAC,CAAC;EACzB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMiB,WAAW,GAAGP,EAAE,CAACO,WAAW,CAACrB,SAAS,EAAE,UAAU,CAAC;IACzD,MAAMsB,KAAK,GAAGD,WAAW,CAACE,WAAW,CAACvB,SAAS,CAAC;IAChD,MAAMK,OAAO,GAAGiB,KAAK,CAACO,GAAG,CAACL,EAAE,CAAC;IAE7BnB,OAAO,CAACK,SAAS,GAAIG,KAAK,IAAK;MAC7BV,OAAO,CAACU,KAAK,CAACE,MAAM,CAAC;IACvB,CAAC;IAEDV,OAAO,CAACG,OAAO,GAAIK,KAAK,IAAK;MAC3BT,MAAM,CAACS,KAAK,CAACE,MAAM,CAACN,KAAK,CAAC;IAC5B,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AACD,SAASR,MAAM,EAAEiB,oBAAoB,EAAEU,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}